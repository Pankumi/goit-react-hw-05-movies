{"version":3,"file":"static/js/680.b7467130.chunk.js","mappings":"2JAqBA,IAnByB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC9BC,EAAOF,EAAOG,QAElB,OACE,wBACGD,EAAKE,KAAI,SAAAC,GACR,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACZ,OACE,yBACE,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMR,GAAWS,GAAE,kBAAaJ,GAA9C,UACE,uBAAIC,OAFCD,EAMZ,KAGN,C,wJCdYK,EAAW,WACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,2FACjBJ,EAAgB,IAChBE,EAAS,MAFQ,SAIfJ,GAAa,GAJE,UAKIO,EAAAA,EAAAA,MALJ,OAKTC,EALS,OAMfN,EAAgBM,GAND,kDAQfC,QAAQC,IAAI,UAAZ,MACAN,EAAS,KAAIO,SATE,yBAWfX,GAAa,GAXE,6EAAH,qDAchBM,GACD,GAAE,KAGD,4BACE,2CACCP,IAAa,SAAC,IAAD,IACba,QAAQT,KAAU,iEAAyCA,KACnC,IAAxBF,EAAaY,SAAgB,SAAC,IAAD,CAAW3B,OAAQe,MAGtD,EAED,W,+LCnCMa,EAAW,+BACXC,EAAU,mCAGHR,EAAkB,mCAAG,WAAMS,GAAN,uFACTC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uBAA4C,CACjEI,OAAQ,CACNC,QAASJ,EACTC,KAAMA,GAAQ,KAJc,cAC1BI,EAD0B,yBAOzBA,EAASZ,MAPgB,2CAAH,sDAUlBa,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAAsC,CAC3DI,OAAQ,CACNC,QAASJ,EACTQ,MAAOD,KAJoB,cACzBF,EADyB,yBAOxBA,EAASZ,MAPe,2CAAH,sDAUjBgB,EAAS,mCAAG,WAAMC,GAAN,uFACAR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BW,GAAW,CAC/DP,OAAQ,CACNC,QAASJ,KAHU,cACjBK,EADiB,yBAMhBA,EAASZ,MANO,2CAAH,sDASTkB,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BW,EAA/B,YAAkD,CACvEP,OAAQ,CACNC,QAASJ,EACTY,SAAU,WAJgB,cACxBP,EADwB,yBAOvBA,EAASZ,MAPc,2CAAH,sDAUhBoB,EAAgB,mCAAG,WAAOH,EAAST,GAAhB,uFACPC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BW,EAA/B,YAAkD,CACvEP,OAAQ,CACNC,QAASJ,EACTY,SAAU,QACVX,KAAMA,GAAQ,KALY,cACxBI,EADwB,yBAQvBA,EAASZ,MARc,2CAAH,uD","sources":["components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx","services/themoviedbApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MovieList = ({ movies, location }) => {\n  let list = movies.results;\n\n  return (\n    <ul>\n      {list.map(el => {\n        const { id, title } = el;\n        return (\n          <li key={id}>\n            <Link state={{from: location}} to={`/movies/${id}`}>\n              <p>{title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useState, useEffect } from 'react';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { getPopularFilmList } from '../../services/themoviedbApi';\nimport { Loader } from '../../components/Loader/Loader';\n\nexport const HomePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [trendingList, setTrendingList] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const runRequest = async () => {\n      setTrendingList([]);\n      setError(null);\n      try {\n        setIsLoading(true);\n        const data = await getPopularFilmList();\n        setTrendingList(data);\n      } catch (err) {\n        console.log('err >> ', err);\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    runRequest();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Today</h1>\n      {isLoading && <Loader />}\n      {Boolean(error) && <p>Oops, some arror occured... Massage: {error}</p>}\n      {trendingList.length !== 0 && <MovieList movies={trendingList} />}\n    </div>\n  );\n};\n\nexport default HomePage;","// $ npm install axios\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a95ff59f8d48ac961c2785119723c43c';\n\n// https://api.themoviedb.org/3/trending/movie/day?api_key=a95ff59f8d48ac961c2785119723c43c\nexport const getPopularFilmList = async page => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      page: page || 1,\n    },\n  });\n  return response.data;\n};\n\nexport const getSearchFilmList = async keyWord => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: keyWord,\n    },\n  });\n  return response.data;\n};\n\nexport const getFilmID = async movieId => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const getFilmIdCredits = async movieId => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nexport const getFilmIdReviews = async (movieId, page) => {\n  const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: page || 1,\n    },\n  });\n  return response.data;\n};\n"],"names":["movies","location","list","results","map","el","id","title","state","from","to","HomePage","useState","isLoading","setIsLoading","trendingList","setTrendingList","error","setError","useEffect","runRequest","getPopularFilmList","data","console","log","message","Boolean","length","BASE_URL","API_KEY","page","axios","params","api_key","response","getSearchFilmList","keyWord","query","getFilmID","movieId","getFilmIdCredits","language","getFilmIdReviews"],"sourceRoot":""}